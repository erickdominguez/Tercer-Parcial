[{"C:\\Users\\Erick\\iCloudDrive\\UACH\\6TO\\Paradigmas de programación\\Tercer Parcial\\pryecto\\src\\App.js":"1","C:\\Users\\Erick\\iCloudDrive\\UACH\\6TO\\Paradigmas de programación\\Tercer Parcial\\pryecto\\src\\reportWebVitals.js":"2","C:\\Users\\Erick\\iCloudDrive\\UACH\\6TO\\Paradigmas de programación\\Tercer Parcial\\pryecto\\src\\firebase.js":"3","C:\\Users\\Erick\\iCloudDrive\\UACH\\6TO\\Paradigmas de programación\\Tercer Parcial\\pryecto\\src\\index.js":"4"},{"size":5606,"mtime":1606793934540,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1606558612000,"results":"7","hashOfConfig":"6"},{"size":614,"mtime":1606640726339,"results":"8","hashOfConfig":"6"},{"size":518,"mtime":1606791581393,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"vlrd2m",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Erick\\iCloudDrive\\UACH\\6TO\\Paradigmas de programación\\Tercer Parcial\\pryecto\\src\\App.js",["19"],"import {db} from './firebase'\nimport './App.css';\nimport {useState} from 'react'\nimport {useEffect} from 'react'\n\nfunction App() {\n  const [Libros, setLibros] = useState([])\n  const [Autor, setAutor] = useState([])\n  const [Titulo, setTitulo] = useState([])\n  const [Clasificacion, setClasificacion] = useState([])\n  const [Editorial, setEditorial] = useState([])\n  const [idLibro, setidLibro] = useState([])\n  const [modoEdicion, setModoEdicion] = useState(false)\n  const [id, setId] = useState('')\n  const getLibros = async () => {\n    const data = await db.collection('Libros').get()\n    const arrLibros = data.docs.map(doc =>({id: doc.id, ...doc.data()}))\n    setLibros(arrLibros)\n    console.log(Libros)\n  }\n  useEffect(() => {\n    getLibros()\n  },[]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const agregarLibro = async (e) => {\n    e.preventDefault()\n    \n    const firebaseLibro = await db.collection('Libros').add({\n      AUTOR : Autor,\n      TITULO : Titulo,\n      CLASIFICACION: Clasificacion,\n      EDITORIAL : Editorial,\n      IDLIBRO : idLibro,\n\n    })\n    const nuevoLibroObject = {\n      AUTOR : Autor,\n      TITULO : Titulo,\n      CLASIFICACION: Clasificacion,\n      EDITORIAL : Editorial,\n      IDLIBRO : idLibro,\n    }\n\n\n    setLibros([...Libros, {id: firebaseLibro.id, ...nuevoLibroObject } ])\n    setAutor('')\n    setTitulo('')\n    setClasificacion('')\n    setEditorial('')\n    setidLibro('')\n  }\n\n  const activarEdicion = (item) => {\n    setModoEdicion(true)\n    setTitulo(item.TITULO)\n    setAutor(item.AUTOR)\n    setClasificacion(item.CLASIFICACION)\n    setEditorial(item.EDITORIAL)\n    setidLibro(item.IDLIBRO)\n    setId(item.id)\n\n  }\n\n  const editarLibro = async (e) => {\n    e.preventDefault()\n    const firebaseLibro = await db.collection('Libros').doc(id).update({\n      AUTOR : Autor,\n      TITULO : Titulo,\n      CLASIFICACION: Clasificacion,\n      EDITORIAL : Editorial,\n      IDLIBRO : idLibro,\n\n    })\n\n    const arregloEditado = Libros.map(item =>\n      \n        item.id === id ? {id: item.id,AUTOR:Autor,TITULO:Titulo,CLASIFICACION: Clasificacion,EDITORIAL : Editorial,IDLIBRO : idLibro, } : item\n      )\n\n      setLibros(arregloEditado)\n      setModoEdicion(false)\n      setId('')\n  }\n\n  const eliminarLibro = async (item) => {\n    try{\n      await db.collection('Libros').doc(item.id).delete()\n      const filtro = Libros.filter(item => item.id !==id)\n      setLibros(filtro)\n      getLibros()\n    }\n    catch(error){\n      console.log(error)\n    }\n    \n  }\n\n  return (\n    \n    \n    <div>\n      <h1 style={{backgroundColor:\"#DC143C\", color: \"\twhitesmoke\"}} className=\"pb-3 font-weight-bold text-center\">Libros Alquilados</h1>\n      <div className=\"container text-center container col-md-8 col-md-offset-4 \" >\n      <div style={{backgroundColor: \"white\",color: \"#DC143C\"}} className=\" mb-3 pb-3 container col-md-10 col-md-offset-2 border rounded\">\n        <form className=\"well form-horizontal\" onSubmit={modoEdicion ? editarLibro : agregarLibro}>\n          <div className=\"form-group  input-group-sm font-weight-bold font-italic\">\n            <p>TITULO</p>\n            <input type =\"text\" className=\"form-control text-center   \" value={Titulo} onChange={e => setTitulo(e.target.value)} placeholder=\"Titulo\" required></input>\n            <p>AUTOR</p>\n            <input type =\"text\" className=\"form-control text-center \" value={Autor} onChange={e => setAutor(e.target.value)} placeholder=\"Autor\" required></input>\n            <p>CLASIFICACION</p>\n            <select className=\"form-control text-center \" value={Clasificacion} onChange={e => setClasificacion(e.target.value)} placeholder=\"Clasificacion\" required>\n              <option value=\"18+\">18+</option>\n              <option value=\"Infantil\">Infantil</option>\n              <option value=\"Adolescentes\">Adolescentes</option>\n            </select>\n            <p>EDITORIAL</p>\n            <input type =\"text\" className=\"form-control text-center \" value={Editorial} onChange={e => setEditorial(e.target.value)} placeholder=\"Editorial\" required></input>\n            <p>ID</p>\n            <input type =\"text\" className=\"form-control text-center \" value={idLibro} onChange={e => setidLibro(e.target.value)} placeholder=\"ID\" required></input>\n          </div>\n        \n          <div className=\"col text-center\">\n            \n          <button type=\"submit\" className=\"btn btn-success btn-lg btn-block \">OK</button>\n          \n          </div>\n        </form>\n      </div>\n      \n      <ul className=\"list-group\" style={{color: \"#DC143C\"}}>\n        {\n          Libros.map(item => (\n          <li className=\"list-group-item\" key={item.id}>\n                <h3 className=\"font-weight-bold font-italic\">{item.TITULO}</h3><hr/>\n                <p className=\"font-weight-bold\">Autor:</p><p style={{color: \"black\"}}>{item.AUTOR}</p>\n                <p className=\"font-weight-bold\">Clasificacion:</p><p style={{color: \"black\"}}>{item.CLASIFICACION}</p>\n                <p className=\"font-weight-bold\">Editorial: </p><p style={{color: \"black\"}}>{item.EDITORIAL}</p>\n                <p className=\"font-weight-bold\">ID: </p><p style={{color: \"black\"}}>{item.IDLIBRO}</p>\n                \n                <div className=\"col text-center\">\n                  <button className=\"btn btn-danger btn-sm mr-2 \" onClick={() => eliminarLibro(item)}>Entregado</button>\n                  <button className=\"btn btn-dark btn-sm \" onClick={() => activarEdicion(item)}>Editar</button>\n                </div>\n                \n\n          </li>\n          ))\n        } \n      </ul>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Erick\\iCloudDrive\\UACH\\6TO\\Paradigmas de programación\\Tercer Parcial\\pryecto\\src\\reportWebVitals.js",[],"C:\\Users\\Erick\\iCloudDrive\\UACH\\6TO\\Paradigmas de programación\\Tercer Parcial\\pryecto\\src\\firebase.js",[],"C:\\Users\\Erick\\iCloudDrive\\UACH\\6TO\\Paradigmas de programación\\Tercer Parcial\\pryecto\\src\\index.js",[],{"ruleId":"20","severity":1,"message":"21","line":66,"column":11,"nodeType":"22","messageId":"23","endLine":66,"endColumn":24},"no-unused-vars","'firebaseLibro' is assigned a value but never used.","Identifier","unusedVar"]